- content_for :head do
  %title Mongoid: Rails

%h1 Rails

%p
  Mongoid создан для и направлен на разработку Rails-приложений, хотя он
  может работать и в любом другом окружении. И если вы работаете с Rails,
  следующие разделы будут полезны для понимания работы Mongoid внутри
  Rails-приложения.

%p
  Если вы ищете образец Rails-приложения и примеры создания моделей,
  обратите внимание на демонстрационное приложение
  <a href="http://github.com/mongoid/echo">Echo</a> из Mongoid.
  Обратите внимание, что это приложение содержит только модели и тесты.

.page-nav
  .container
    %ul.nav.nav-pills
      %li= link_to "Атрибуты с множественными параметрами", "#multi_param"
      %li= link_to "Расширения Rails", "#railties"
      %li= link_to "Задачи Rake", "#rake"

%section#multi_param
  %h2 Атрибуты с множественными параметрами

  %p
    Если вы хотите использовать атрибуты с множественными параметрами
    в Rails, необходимо включить в класс дополнительный модуль Mongoid.

  .well
    %table
      %tr
        %td.samurai= image_tag "/images/samurai.png"
        %td.note
          Причина того, что для работы с ними необходимо включать 
          отдельный модуль, заключается в том, что мы считаем, что 
          такие атрибуты — это не самый удобный способ работы с полями
          даты/времени в формах и его реализация довольно сложна.

  :coderay
    #!ruby
    class Person
      include Mongoid::Document
      include Mongoid::MultiParameterAttributes
    end

%section#railties
  %h2 Расширения Rails

  %p
    Mongoid предоставляет набор расширений Rails (railties) и
    инициализаторов (initializers), которые стоит использовать
    с большой осторожностью при написании Rails-приложений.

  %h3 Конфигурация

  %p
    Вы можете задавать параметры конфигурации Mongoid в файле <tt>application.rb</tt>
    также, как и другие настройки окружения приложения, параметры Mongoid начинаются c
    <code>config.mongoid</code>. Те параметры, которые указываются здесь, имеют
    более высокий приоритет, чем параметры в <code>config/mongoid.yml</code>.

  :coderay
    #!ruby
    module MyApplication
      class Application < Rails::Application
        config.mongoid.logger = Logger.new($stdout, :warn)
        config.mongoid.persist_in_safe_mode = true
      end
    end

  %h3 Предварительная загрузка моделей

  %p
    Для правильного установления наследования внутри коллекции в режиме
    разработки Mongoid необходимо загружать все модели перед каждым запросом.
    Это может сильно сказаться на производительности приложения, поэтому
    если вы не используете наследование моделей, этот параметер рекомендуется
    выключить.

  :coderay
    #!ruby
    config.mongoid.preload_models = false

  %h3 Исключения

  %p
    Также, как и Active Record, Mongoid даёт команду на передачу определённых
    кодов ответа http при возникновении некоторых исключений.

    %ul
      %li <code>Mongoid::Errors::DocumentNotFound</code> : 404
      %li <code>Mongoid::Errors::Validations</code> : 422

  %h3 Unicorn и Passenger

  %p
    Если вы работаете с Unicorn или Passenger, каждый раз при ответвлении
    дочернего процесса при использовании предварительной загрузки приложения
    или smart spawning, Mongoid автоматически переподключается к основной
    базе данных. Если вы выполняете переподключение вручную в своём приложении,
    то можете удалить этот код.

%section#rake
  %h2 Задачи Rake

  %p
    При использовании в окружении Rails 3 Mongoid предоставляет следующий
    набор задач для rake:

  %ul
    %li
      <code>db:create</code>: Создана по зависимости. На самом деле,
      ничего не делает.
    %li
      <code>db:create_indexes</code>: Собирает все определения индексов
      в моделях и пытается создать их в базе данных.
    %li
      <code>db:remove_indexes</code>: Собирает все определения индексов
      в моделях и пытается удалить их из базы данных.
    %li
      <code>db:drop</code>: Уничтожает все коллекции в базе данных за
      исключением системной коллекции.
    %li
      <code>db:migrate</code>: Создана по зависимости. На самом деле,
      ничего не делает.
    %li
      <code>db:schema:load</code>: Создана по зависимости фреймворка. На самом деле,
      ничего не делает.
    %li
      <code>db:seed</code>: Заполняет базу данных из db/seeds.rb
    %li
      <code>db:setup</code>: Создаёт индексы и заполняет базу данных.
    %li
      <code>db:test:prepare</code>: Создана по зависимости фреймворка. На самом деле,
      ничего не делает.
